@model WorkorderMobileMvc.ViewModel.WOPartViewModel

@{
    ViewBag.Title = "Edit";
}

@Scripts.Render("~/bundles/jqueryValidate")

@Scripts.Render("~/bundles/Utils")
<script type="text/javascript">
    $(document).ready(function () {


        // populate the part drop down list based on selected location
        $('#DDLLocation').change(function () {
            populateList($('#DDLPart'), $('#hiddenURL').val() + "/GetParts?location=" + $('#DDLLocation').val());
            ('#DDLPart').prop('---Select Parts---', 0);
        });

        // auto-save
        var isDirty = false;

        function setDirtyFlag() {
            if (!isDirty) {
                isDirty = true;
            }
        }

        // detect whether or not form is dirty and set flag
        $(':input').change(function () {
            setDirtyFlag();
        });



        // end auto-save

        // suppress form submit when enter key is pressed
        // instead, unless a hyperlink has focus, move the focus to the "Back" link
        // if a link has focus, let the link be followed and any logic run
        $('form').bind('keypress', function (e) {
            if (e.keyCode == 13) {
                if ($('a').is(':focus')) {
                    return true;
                } else {
                    $('#backLink').focus();
                    return false;
                }
            }
        });
    });
</script>




<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID) 
     @Html.HiddenFor(model => model.WO)
     @Html.HiddenFor(model => model.WOnumber)
 
<p>
            <strong>Edit Part</strong>&nbsp;
            @Html.ActionLink("Back", "Edit", "WorkOrder", new { id = Model.WOnumber }, new { id = "backLink" })&nbsp;

            <a href="@Url.Content(" ~ />Content/Help.htm")" target="_blank" id="helpLink">Help</a>
        </p>
   <fieldset>
        @Html.Hidden("hiddenURL", Url.Action("", "part"))
       

        <div class="editor-label-dll">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(x => x.Location, new SelectList(Model.Locations, "Location", "Location", Model.Locations), "---Select Location---", new { Class = "ddl", id = "DDLLocation" })


            @Html.ValidationMessageFor(model => model.Location)
        </div>

        
        <div class="editor-label-dll">
            @Html.LabelFor(model => model.Part)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Part, new SelectList(Model.Parts,"Part","part", Model.Parts), "---Select Parts---", new { @class = "ddl", id = "DDLPart" })
            @Html.ValidationMessageFor(model => model.Part)
        </div>
        <div class="editor-label-dll">
            @Html.LabelFor(model => model.QuantityActual)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuantityActual)
            @Html.ValidationMessageFor(model => model.QuantityActual)
        </div>
        <div style="clear:left"></div>
         <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
